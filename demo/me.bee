+----------------------------------------
 demonstrate rule associated to a type
----------------------------------------+
load $pro_lib.console.(*);

** enumeration with public members
type Number: {.zero, .one, .two} <: Ordinal;


** make a rule for define Number
rule convert(self ∈ Number) => (y ∈ S):
  alter y := ("zero"  if self = zero,
              "one"   if self = one,
              "two"   if self = two,
              "none");
return;

** a wrapper rule for convert
rule equal(self ∈ Number, s ∈ S) => (r ∈ L):
  alter r := (s = convert(x));
return;

rule main():
  make test ∈ Number;
  alter test := zero; // instance of Number
      
  ** calling test rules 
  print test.convert;       // will print "zero"
  print test.equal('zero'); // will print 1
return;

#end of module
