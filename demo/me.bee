+----------------------------------------
 demonstrate method associated to a define
----------------------------------------+
#driver "me"
-- enumeration with public members
define Number <: {.zero, .one, .two};
create test ∈ Number;
modify test := zero; -- instance of Number
-- create a method for define Number
define convert(x @ Number) => (y ∈ S):
  modify y := ('zero'  if x = zero,
               'one'   if x = one,
               'two'   if x = two,
               'none');
define;
-- a wrapper method for convert
define equal(x @ Number, s ∈ S) => (r ∈ L):
  modify r := s = x.convert(); 
define;
    
-- calling test methods 
print test.convert();     -- will print "zero"
print test.equal('zero'); -- will print 1
over;