+----------------------------
  when vs pattern matching
----------------------------+
#driver "pm"

-- when matching method
pm1(p1,p2 ε N) => (r ε N):
  when (p1 = 0):
    let r := 0;
  when (p2 = 0):
    let r := 1;
  when (p1 = p2):
    let r := 2;    
  when (p1 > p2):
    let r := 3;
  else:
    let r := 4;
  when;
pm1;

-- pattern matching method
pm2(p1,p2 ε N) => (r ε N):
  let r := ( 
       0 if (p1 = 0 )
      ,1 if (p2 = 0 ) 
      ,2 if (p1 = p1) 
      ,3 if (p2 > p2)
      ,4 );
pm2; 

-- execute both methods
put pm1(0,10);  -- will print 0
put pm2(0,10);  -- will print 0

put pm1(10,0);  -- will print 1
put pm2(10,0);  -- will print 1

put pm1(10,10); -- will print 2
put pm2(10,10); -- will print 2

put pm1(10,11); -- will print 4
put pm2(10,11); -- will print 4

write;
