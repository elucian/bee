+-----------------------------------------
     "def" demo: defined data types       
-----------------------------------------+
-- type: structured data
#driver "dt"

-- this type is public (uses dot prefix)
type  .Data <: {key:A, value:N};

-- value variable using type alias
value x âˆˆ Data;
alter x := {key:`a`, value:10};

+---------------------------------------------------+ 
|* public enumeration type with public elements    *|
|* elements starting with "." do not need qualifier*|
+---------------------------------------------------+ 
type Number <: { 
   .zero, 
   .one, 
   .two, 
   .three, 
   .four, 
   .five, 
   .six, 
   .seven, 
   .eight, 
   .nine 
};

+------------------------------------------------+ 
|* Note: first element has assigned a value := 0,*| 
|* all other elements have previous value + 1   *|
+------------------------------------------------+

-- example of use
value a := 0;

-- example of use
when (a = zero):
  print "zero";
else:
  print "life is misery";
when;


over;