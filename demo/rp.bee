+------------------------
  Rule as parameter
------------------------+
driver rp:

# declare rule with rule "cmp" as parameter
rule compare(a,b ∈ Z, cmp @ (Z,Z) ∈ L) => (r @ L):
  alter r := cmp(a,b);
return;

# declare a lambda expression:
make lt := (a,b ∈ Z) ∈ L => (a < b);
make test ∈ L;

# delegate using rule "lt"
alter test := compare(1,2,cmp:lt);
print test; * expect 1

# delegate using anonymous rule
alter test := compare(1, 2, (a, b) => (a ≥ b));
print test; * expect 1

over.
