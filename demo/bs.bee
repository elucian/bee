+--------------------------------------
|   Bubble sort for Array of integers |
+-------------------------------------+
driver bs:

load $pro_lib.console.(.);

** bubble sort for integers
rule sort(this @ [Z]):
  ** local variables
  make n := length(this)-1;
  make i := 0 ∈ N; 
  make temp ∈ Z; 
  make swap := True ∈ L;
  ** repetitive block: while
  while swap do
    alter i := 0;
    alter swap := False; // reset flag
    while (i ≤ n) do
      ** this pair is out of order ?
      when this[i] < this[i+1] do
        ** swap elements
        alter temp     := this[i];
        alter this[i]  := this[i+1];
        alter this[i+1]:= temp;
        alter swap := True; // set flag
      done;
      alter i += 1;
    repeat;
  repeat;
return;
** define test & result fixture
make test   := [1,4,1,5,9,2,6,5,3,5];
make result := [1,1,2,3,4,5,5,5,6,9];
** test sort rule
apply sort(test);
print test; // expect [1,1,2,3,4,5,5,5,6,9]

** check result
pass if test = result;

over.
