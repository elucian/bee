+----------------------
   Bubble Sort Demo
-----------------------+
#driver "bs"

-- bubble sort method
sort(this @ [Z]):
  new n := length(this)-1;
  new swap ε L;
  new temp ε X;
  new i := 0 ε N;
  cycle:
    let i := 0;
    let swap := $0;
    cycle: 
      stop if (i = n);
      -- this pair is out of order ?
      when (this[i] < this[i+1]):
        -- swap pair and set swap flag = true
        let temp     :: this[i];
        let this[i]  :: this[i+1];
        let this[i+1]:: temp;
        swap := $1;
      when;
      let i += 1; 
    cycle;
    stop if ¬ swap;
  cycle;
sort;

-- define test & result fixture
new test   := [1,4,1,5,9,2,6,5,3,5];
new result := [1,1,2,3,4,5,5,5,6,9];
-- test sort method
sort(test);

put test;
write;

-- check result
fail if ¬ (test = result);

-- end