+----------------------
   Bubble Sort Demo
-----------------------+
#driver "bs"
-- bubble sort method
define sort(this @ [Z]):
make n := length(this)-1;
make i := 0 ∈ N;
make temp @ Z;  
make swap := T ∈ L;  
  while swap:
    alter i := 0;
    alter swap := $T;
    while (i ≤ n): 
      -- this pair is out of order ?
      when (this[i] < this[i+1]):
        -- swap pair and set swap flag = true
        alter temp     :: this[i];
        alter this[i]  :: this[i+1];
        alter this[i+1]:: temp;
        alter swap := $T;
      when;
      alter i += 1; 
    while;
  while;
define;
-- define test & result fixture
make test   := [1,4,1,5,9,2,6,5,3,5];
make result := [1,1,2,3,4,5,5,5,6,9];
-- test sort method
sort(test);
print test;

-- check result
fail if (test ≠ result);

over;