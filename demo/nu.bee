+----------------------------------------------
|          Working with references            |  
----------------------------------------------+
driver nu:
load $pro_lib.console.(.);

make s := 10 ∈ Z; // define integer reference
make d, e ∈ Z;    // reference to natural number

** assign "by share" 
alter d := s; 
alter d += 1; 
print s; // s = 11  (modified)
print d; // d = 11  (modified) 

** verify identity
print d ≡ s ; // 1 same reference
print d = s ; // 1 same value

** assign "by copy"
alter e :: d; // copy value of d
alter e += 1;
print e; // 12 (modified)
print d; // 11 (unmodified)

** verify identity
print e ≡ d; // 0 different reference
print e = d; // 1 same value

** boxing/ unboxing
make i := 10 ∈ i32; // native type
make c := 0  ∈ Z ;  // reference
trial:
  alter c := i; // auto boxing, makes c = 10 
  alter i := c; // not possible (fail)
patch
  ** implicit unboxing error
  print "unboxing error:" + &error.message;
done;

** explicit unboxing
alter i := d -> i32;

** verify identity
print i ≡ d; // 0 different locations
print i = c; // 1 same value

over.
