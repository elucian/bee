+----------------------------------------------
|          Working with references            |  
----------------------------------------------+
load $pro_lib.console.(*);

rule main():
  make s: 10 ∈ [Z];   // define integer reference
  make d, e  ∈ [Z];   // reference to natural number
  
  ** assign "by share" 
  alter d := s; 
  alter d += 1; 
  print s; // s = 11  (modified)
  print d; // d = 11  (modified) 
  
  ** verify identity
  print d = s ; // 1 equal
  print d ≡ s ; // 1 identical
  
  ** assign "by copy"
  alter e :: d; // copy value of d
  alter e += 1;
  print e; // 12 (modified)
  print d; // 11 (unmodified)
  
  ** verify identity
  print e = d; // 1 same value
  print e ≡ d; // 0 different reference
  
  ** boxing/ unboxing
  make i := 10 ∈  Z  ; // native type
  make c := 0  ∈ [Z] ;  // reference
  trial:
    alter c := i; // auto boxing, makes c = 10 
    alter i := c; // not possible (fail)
  patch
    ** implicit unboxing error
    print "unboxing error:" + @error.message;
  done;
  
  ** explicit unboxing
  alter i := Z(c)
  
  ** verify identity
  print i = c; // 1 same value
  print i ≡ c; // 0 different locations
return;

#end of module
