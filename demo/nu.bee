+----------------------------------------------
          Working with references              
----------------------------------------------+
#driver "nu"

new d, e ∈ Z; --reference to natural number
new s := 10 ∈ i8; --> type is i8 native type   

-- assign "by value"
let e := s; -- make a clone from s
let e += 1; -- increment e value
put e; --> e = 12 (modified)
put s; --> s = 11 (unchanged)

-- test modifier effect
fail if (s ≡ d); 

-- assign "by reference" 
let d :: s; -- explicit boxing address for "s"
let d += 1; -- modify underline value of d that is s  
put s; --> s = 11  (modified)
put d; --> d = 11  (modified) 
write; 
-- test modifier effect
fail if ¬ (s ≡ d); 
over;