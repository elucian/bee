+----------------------------------------------
|          Working with references            |  
----------------------------------------------+
rule main:
  ** reference to number
  s := 10 ∈ [Z]; 
  d, e    ∈ [Z]; 
  
  ** assign "by share" 
  d := s;  -- use same location
  d += 1;  -- increment
  claim s = 11; -- is modified)
  
  ** verify identity
  claim d = s ; -- is equal
  claim d ≡ s ; -- is identical
  
  ** assign "by copy"
  e :: d; -- copy value of d
  e += 1;
  
  ** verify value  

  claim d = 11; -- unmodified  
  claim e = 12; -- modified
   
  ** verify identity
  claim e = d; -- same value
  claim e ≢ d; -- different locations
  
  ** boxing/ unboxing  
  i := 10 ∈  Z  ; -- native type
  c := 0  ∈ [Z] ; -- reference
  
  c := @i; -- explicit boxing
  claim c  = 10; -- defines c = 10 
  
  ** verify identity
  claim i  = c ; -- same value
  claim @i ≡ @c; -- same location
  claim i  ≢ c ; -- different type
  
  ** implicit unboxing
  i := e; 
  
  claim i = 12; -- modified
  claim c = 12; -- modified
  claim i ≢ e;  -- different locations
  
return;
# end of module
