+-----------------------------------
  Producer-consumer design pattern 
-----------------------------------+
driver pc:

make  c  := 100 ∈ N;       ** channel capacity
make  ch := ()  ∈ (N);     ** define empty channel
make  processing :=  True; ** stop semaphore for consumers

# ch is the communication channel
rule producer(ch @ (N)):
  alter processing := True;
  for j in (1..1000) do
    for i in (1..c) do
      alter ch += random(10); ** append
    next;
    yield consumer;
  repeat;  
  alter processing := False;
return;

# ch is the communication channel
rule consumer(ch @ (N)):
  while processing do
    while (len(ch) > 0) do
      alter ch -= ch.head;   ** FIFO
      wait  20;
    repeat;
    yield producer;  
  repeat;    
return;

** produce on 1 thread
begin producer(q);

** consume on 7 threads  
for i ∈ (1..7) do
  begin consumer(ch);
repeat;
rest;

over.
