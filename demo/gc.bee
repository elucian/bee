+----------------------------------
  Generator Class demo 
----------------------------------+
#driver "gc"

-- first create an object
def GenI <: {min ,max ,ci:min ε Z};

-- reset method
def GenI.reset(me @ GenI, p_min , p_max ε Z):
  let me.min := p_min
  let me.max := p_max
  let ci:= p_min;    
def;

-- get next index
def GenI.next(me @ GenI) => (i ε Z):
  let i  := ci;
  let ci += 1;
def;

-- use GenI to create one instance: 
new foo := {min:10,max:20} ε GenI;
new x := 0;
cycle:
  stop if (x = -1);
  let x := foo,next();  
  say (x,",");
cycle;
write; 
over;
--expect: 10,11,12,13,14,15,16,17,18,19,20, 