+--------------------------------------
 Demo sum on multit-hread
---------------------------------------+
rule sum(a, b &isin; Z) => (r &isin; Z):
  given i in (a..b) do
      r += i;
  cycle;    
return;

** prepare for execution on 4 threads
rule main():
    make results <: List; // partial sum collection
    ** use a mapping technigue to split data in 4 equal batches
    given i <- (1.!100:25) do
        begin sums <+ test(i,i+25); 
    cycle;        
    yield; //wait for other threads to finish    
    
    make output âˆˆ Z;
    
    ** reduce results into output
    given partial <- results do
        alter output += partial;
    cycle;
    print output; // 5050
    pass if output = 5050; 
return;